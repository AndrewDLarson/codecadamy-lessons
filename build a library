class Media {
  constructor(title) {
    this._title = title;
    this._isCheckedOut = false;
    this._ratings = [];
  }
  get title() {
    return this._title;
  }
  get isCheckedOut() {
    return this._isCheckedOut
  }
  get ratings() {
    return this._ratings
  }

  setisCheckedOut(boolien) {
    this._isCheckedOut = boolien;
  }

   toggleCheckOutStatus() {
     if (this._isCheckedOut === false) {
       this._isCheckedOut = true;
     } else {
       this._isCheckedOut = false;
     }
  }
  getAverageRating() {
    return this._ratings.reduce((a, b) => a+b)/ this._ratings.length
  }
  addRating(rating) {
   if (rating > 0 && rating < 6) {
      this._ratings.push(rating);
   } else {
     console.log("Rating must be between 1 and 5")
   }
  }
}

/*let test = new Media('test')
test.isCheckedOut(true)
test.toggleCheckOutStatus();
console.log(test._isCheckedOut)*/



class Book extends Media {
  constructor(author, title, pages, type) {
    super(title);
    this._author = author;
    this._pages = pages;
    this._type = type;
  }
  get author() {
    return this._author;
  }
  get pages() {
    return this._pages;
  }
}

class Movie extends Media {
  constructor(director, title, runtime, soundtrack) {
  super(title);
  this._director = director;
  this._runtime = runtime;
  this._soundtrack = soundtrack;
  }
  get director() {
    return this._director;
  }
  get runtime() {
    return this._runtime;
  }
}

class Cd extends Media {
  constructor(artist, title, songs) {
    super(title);
    this._artist = artist;
    this._songs = songs;
  }
  get artist() {
    return this._artist;
  }
  get songs() {
    return this._songs;
  }
  shuffle() {
    let phoList = this._songs;
    let randomSongs = [];
    for (let i = phoList.length ; i >= phoList.length; i--) {
       let number = Math.floor(Math.random()*phoList.length);
      randomSongs.push(phoList[number]);
      phoList.splice(number, 1)
    };
    randomSongs.pop()
    return randomSongs;
  }
}

let risk = new Cd('Megadeth', 'Risk', ['Insomnia', 'Enter the Arena', 'Crush em', 'Breadline', 'The Doctors Calling', 'Ill be there', 'Wanderlust', 'Ecstacy', 'Seven', 'Time 1', 'Time 2'])
//console.log(risk.songs)






let historyOfEverything = new Book('Bill Bryson', 'A Short History of Nearly Everything', 544);

historyOfEverything.toggleCheckOutStatus();
//console.log(historyOfEverything.isCheckedOut)
historyOfEverything.addRating(4);
historyOfEverything.addRating(5);
historyOfEverything.addRating(5);
//console.log(historyOfEverything.getAverageRating());

let speed = new Movie('Jan de Bont', 'Speed', 116);
speed.toggleCheckOutStatus();
//console.log(speed.isCheckedOut);
speed.addRating(5);
speed.addRating(1);
speed.addRating(5);
//console.log(speed.getAverageRating())


class Catalog {
  constructor() {
    this._books = [];
    this._movies = [];
    this._cds = [];
    this._other = [];
    this._all = [];
  }
  get books() {
    return this._books;
  }
  get movies() {
    return this._movies;
  }
  get cds() {
    return this._cds;
  }
  get other() {
    return this._other;
    }
  get all() {
      return this._all;
    }
  set addBook(book) {
    this._books.push(book);
    this._all.push(book);
  }
  set addMovie(movie) {
    this._movies.push(movie);
    this._all.push(movie);
  }
  set addCd(cd) {
    this._cds.push(cd);
    this._all.push(cd);
  }
  set other(anything) {
    this._other.push(anything)
    this._all.push(anything);
  }
  addMedia(item) {
    let section = item.constructor.name;
    if (section == 'Book'){
      this._books.push(item);
    } else if (section == 'Movie') {
      this._movies.push(item)
    } else if (section == 'Cd') {
      this._cds.push(item)
    } else {
      this._other.push(item)
    }
    this._all.push(item);
  }
}
let main = new Catalog;


main.addMedia(historyOfEverything);
main.addMedia('test item');
main.addMedia(risk);
main.addMedia(speed);
console.log(main.all);

